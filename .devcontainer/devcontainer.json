{
  "name": "Jakarta on AWS",
  "image": "mcr.microsoft.com/devcontainers/base:ubuntu",
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [
    // Http
    8080,
    // Https
    8081
  ],
  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  "remoteUser": "root",
  // Add more features. See complete list https://github.com/devcontainers/features
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "configureZshAsDefaultShell": true
    },
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "moby": false,
      "azureDnsAutoDetection": false,
      "installDockerBuildx": false,
      "installDockerComposeSwitch": false
    },
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/java:1": {},
    "ghcr.io/devcontainers/features/aws-cli:1": {},
    "ghcr.io/devcontainers/features/terraform:1": {
      // Read more https://github.com/devcontainers/features/issues/1388
      "tflint": "none"
    }
  },
  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        // Java and Quarkus
        "redhat.vscode-quarkus",
        "humao.rest-client",
        // AWS and Kubernetes
        "AmazonWebServices.aws-toolkit-vscode",
        "AmazonWebServices.amazon-q-vscode",
        "mads-hartmann.bash-ide-vscode",
        // Misc.
        "EditorConfig.EditorConfig",
        "redhat.vscode-yaml",
        "albert.tabout",
        "streetsidesoftware.code-spell-checker",
        "redhat.fabric8-analytics"
      ],
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "java.configuration.updateBuildConfiguration": "interactive",
        "quarkus.tools.alwaysShowWelcomePage": false,
        "amazonQ.telemetry": false,
        "aws.telemetry": false,
        "files.watcherExclude": {
          "**/target/**": true,
          "**/.mvn/**": true,
          "**/.terraform/**": true,
          "**/.terragrunt/**": true
        },
        "cSpell.dictionaries": [
          "ignore"
        ],
        "cSpell.dictionaryDefinitions": [
          {
            "name": "ignore",
            "path": "${workspaceFolder}/.spellcheckignore"
          }
        ],
        "cSpell.useGitignore": true,
        "redhat.telemetry.enabled": false,
        "terminal.integrated.defaultProfile.linux": "zsh"
      }
    }
  },
  // Use 'updateContentCommand' to run commands after the container is successfully created.
  "updateContentCommand": {
  },
  "mounts": [
    "source=${localEnv:HOME}${localEnv:USERPROFILE}/.aws,target=/root/.aws,type=bind,consistency=cached"
  ],
  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": {
  }
}
